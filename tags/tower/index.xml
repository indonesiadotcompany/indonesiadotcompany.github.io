<<<<<<< HEAD
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
=======
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
>>>>>>> 76b9dfedd4f807c5ef234d4614aced0b6b7eeca5
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tower on Blog Indonesiadot.Com</title>
    <link>https://blog.indonesiadot.com/tags/tower/</link>
    <description>Recent content in tower on Blog Indonesiadot.Com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jan 2020 15:17:54 +0700</lastBuildDate>
    
	<atom:link href="https://blog.indonesiadot.com/tags/tower/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansible Tower first Implementation</title>
      <link>https://blog.indonesiadot.com/2020/01/19/ansible-tower-first-implementation/</link>
      <pubDate>Sun, 19 Jan 2020 15:17:54 +0700</pubDate>
      
      <guid>https://blog.indonesiadot.com/2020/01/19/ansible-tower-first-implementation/</guid>
<<<<<<< HEAD
      <description>Ansible Tower first Implementation  Install ansible tower masukan license tambahkan access - organization tambahkan access - users tambahkan access - teams tambahkan resources - inventory siapkan script playbook / roles (jika berupa folder, itu ditaruh di /var/lib/awx/projects, jika git, pastikan bisa di akses)
chmod g+s /var/lib/awx/projects cp -r test /var/lib/awx/projects/  tambahkan resources - projects
 buat ssh-keygen di server ansible tower, buat user khusus ansible, dan masukan di /etc/sudoers, lalu ssh-copy-id ke tiap node / client sesuai user yg baru dibuat / didefine</description>
=======
      <description>Ansible Tower first Implementation  Install ansible tower masukan license tambahkan access - organization tambahkan access - users tambahkan access - teams tambahkan resources - inventory siapkan script playbook / roles (jika berupa folder, itu ditaruh di /var/lib/awx/projects, jika git, pastikan bisa di akses)  chmod g+s /var/lib/awx/projects cp -r test /var/lib/awx/projects/  tambahkan resources - projects buat ssh-keygen di server ansible tower, buat user khusus ansible, dan masukan di /etc/sudoers, lalu ssh-copy-id ke tiap node / client sesuai user yg baru dibuat / didefine buat host client / node yang mau di manage di /etc/hosts tambahkan resources - credentials tambahkan resources - templates test launch jobs based on template yg baru dibuat  Ansible tower + openscap  install scap-workbench  yum install scap-workbench xauth -y  buat direktori report  mkdir /report chgrp awx /report chmod g+s /report/ chcon -Rv --type=httpd_sys_rw_content_t /report/ ln -s /report /var/lib/awx/public/  tambahkan direktori report di nginx   location /report { alias /var/lib/awx/public/report; autoindex on; }  akses scap-workbench dari laptop  ssh -X -C tower1 scap-workbench  jalankan Scan Remote Machine (over SSH) ke ansible@client1 (jika muncul popup, pilih centos7) Save generate result html ke /report (tambahkan pembeda semisal datetime untuk membedakan tiap file report)  Referensi:</description>
>>>>>>> 76b9dfedd4f807c5ef234d4614aced0b6b7eeca5
    </item>
    
  </channel>
</rss>